using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleTetris
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string[] tetrisMENU =
{ "*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
"*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
"*%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%%%%@@%%%%%%@@@@%%@%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%",
"*%%#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%",
"*%%#%@@#**************%-========+++++#*-------------+%=+++++++++++*@@@%+++++*@@@#**********#@@@%%%%%",
"*%%#%@@#**************%-=============#*:::::::::::::=@=============+#@%+====*@%***********#@@@@%%%%%",
"*###%@@#*+++++*++++++*%-------------=#*:::::::::::::=%==============+%%+====*%******+****#@@##%%%%#%",
"*###%@@%####*++++*%%%%%-----=########%#***+-::::-####@======#*+=====+%%+==-=*%*+++++*#%%%@@@%%@%%##%",
"*###%@@@@@@%*++++*@@@@%-----=++++++*@@@@@@#-::::=@@@@@======%+=====+%@%+---=*@%*++++**%@@@@@@@@%%##%",
"*###%@@@@@@%+++++*@@@@%--::::::::-+@@@@@@@#-:::--@@@@@=====++=---=*%@@%+---=*@@%**++++*%@@@@@@@%###%",
"*###%@@@@@@%+++++*@@@@%--::----=+*@@@@@@@@#-=====@@@@@=###*+#*####*#@@%+---=*@@@@#*++++*#@@@@@@%###%",
"*###%@@@@@@%+++++*@@@@%-****=+++*%@@@@@@@@#-=====@@@@@=**#*+@#+*##***@%+*****@@@@@%*+++++*%@@@@%###%",
"*####@@@@@%%*+****@@@%%-****=@%@@@@%%@%%%%*-====-@@@@@=****+@%%+******%+*****@%%%@@%#***++*%%%@%###%",
"*####%%%%%%%******%%%%%-+***++++******%%%%*-===-=%%%%@=****+%%%%******#+*****%#*************%%%%###%",
"*####%%%%%%%******%%%%%-+**++++++++++++%%%*-===-=%%%%@=****+%%%%%*****#+*****%**************%%%%###%",
"*####%%%%%%%******%%%%%#=+++++++++++++++%%*-----=%%%%@=****+%%%%%%****#+*****%*************%%%%%###%",
"*####%%%%%%%*****#%%%%%%%*++++++++++++++*%#======%%%%%++++++%%%%%%%#**#++***#%************%%%%%%%###%",
"****#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#**%",
"***################################%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#**%",
"**********************************#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*********************************%",
"++++++++++++++++++++++++++++++****#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***#++++************+++***********",
".............................. =#**#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#**#+....................  ........",
"              .......        .=#**#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+..                            ",
"                             .=#**#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+..                            ",
"                            .= ***#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+..                            ",
"                             .= ***##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+..                            ",
"                             .= ***##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+..                            ",
"                             .= ***##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+..                            ",
"                             .= ***##%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#***+..                            ",
"                             .= ***##%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#***+..                            ",
"                             .= ***##%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#***+..                            ",
"                             .= ***##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+..                            ",
"                             .= **+##%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#***+..                            ",
"                             .= *++####%%%#########%%%%%%%##%%%%%%#+**+..                            ",
"                             .= *++################%%%%%%######%%%#++*+..                            ",
"                             .= *++++++++++++++++++++++++++++++++++++*+..",
"                             .= **************************************+.." };


            foreach (var tetris in tetrisMENU)
            {
                Console.WriteLine(tetris);
            }

            Console.SetCursorPosition(38, 38);
            Console.Write("1.시작하기");
            Console.Write("\t2.QUIT");

            ConsoleKeyInfo key = Console.ReadKey(true);

            switch (key.Key)
            {
                case ConsoleKey.D1:
                    GameStart();
                    break;
                case ConsoleKey.D2:
                    Console.WriteLine();
                    Console.WriteLine("이걸끄네!");
                    break;

            }

        }


        static void GameStart()
        {
            //블럭종류
            string blockStyle = " ▧▩▣";

            int[,] background;
            int backgroundWidth = 15;
            int backgroundHeight = 20;

            Console.Clear();
            background = new int[backgroundHeight, backgroundWidth];
            Console.WriteLine();

            //테트리스 박스들 다 빈공간으로 채움
            for (int i = 0; i < background.GetLength(0); i++)
            {
                for (int j = 0; j < background.GetLength(1); j++)
                {
                    if (i == background.GetLength(0) - 1 ||
                        j == background.GetLength(1) - 1 ||
                        j == 0)
                    {
                        background[i, j] = 1;
                    }

                    else
                    {
                        background[i, j] = 0;

                    }
                }
            }
            DrawBackGround(ref background, blockStyle);

        }
        static void DrawBackGround(ref int[,] background, string blockStyle)
        {
            for (int i = 0; i < background.GetLength(0); i++)
            {
                for (int j = 0; j < background.GetLength(1); j++)
                {
                    Console.Write(blockStyle[background[i, j]]);
                }
                Console.WriteLine();
            }

            //for (int i = 0; i < background.GetLength(0); i++)
            //{
            //    for (int j = 0; j < background.GetLength(1); j++)
            //    {
            //        Console.Write(background[i,j]);
            //    }
            //    Console.WriteLine();
            //}

        }
    }
}




